suite: Ingress
templates:
  - templates/ingress.yaml
tests:
  - it: should render nothing if not enabled
    asserts:
      - hasDocuments:
          count: 0

  - it: should render Ingress right if enabled
    set:
      appName: example-app
      ingress:
        enabled: true
        labels:
          expose: true
        annotations:
          kubernetes.io/ingress.class: nginx-ingress
          ingress.kubernetes.io/rewrite-target: /
          ingress.kubernetes.io/force-ssl-redirect: "true"
        entries:
        - name: "internal"
          hosts:
            - hostname: service1.example.com
              paths:
                - path: /v2
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - equal:
          path: metadata.labels["expose"]
          value: "true"
      - notExists:
          path: spec.tls
      - exists:
          path: metadata.annotations["kubernetes.io/ingress.class"]
      - isNotNullOrEmpty:
          path: metadata.annotations["ingress.kubernetes.io/rewrite-target"]
      - isNotNullOrEmpty:
          path: metadata.annotations["ingress.kubernetes.io/force-ssl-redirect"]
      - notExists:
          path: metadata.annotations["ingress.kubernetes.io/cookie-name"]
      - equal:
          path: metadata.annotations["kubernetes.io/ingress.class"]
          value: nginx-ingress
      - equal:
          path: metadata.annotations["ingress.kubernetes.io/rewrite-target"]
          value: /
      - exists:
          path: spec.rules[0].http.paths
          content:
            path: /v2
            backend:
              service:
                name: example-app
                port: 
                  number: 80801

  - it: should set annotations if given and verify the specific values.
    set:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx-ingress
          kubernetes.io/tls-acme: "true"
          ingress.kubernetes.io/rewrite-target: /
        entries:
        - name: external
          ingressClassName: nginx
          hosts:
            - hostname: service1.example.com
              paths:
                - path: /*
                  serviceName: ssl-redirect
                  servicePortName: use-annotation
                - path: /metrics
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - equal:
          path: metadata.annotations["kubernetes.io/ingress.class"]
          value: nginx-ingress
      - equal:
          path: metadata.annotations["kubernetes.io/tls-acme"]
          value: "true"
      - equal:
          path: metadata.annotations["ingress.kubernetes.io/rewrite-target"]
          value: /
      - equal:
          path: .spec.rules[0].http.paths[0].path
          value: /*
      - equal:
          path: .spec.rules[0].http.paths[0].backend.service.name
          value: ssl-redirect
      - equal:
          path: .spec.rules[0].http.paths[0].backend.service.port.name
          value: use-annotation
      - equal:
          path: .spec.rules[0].http.paths[1].path
          value: /metrics
      - equal:
          path: .spec.rules[0].host
          value: service1.example.com

  - it: should create an ingress
    set:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/rewrite-target: /
        entries:
          - name: test
            hosts:
            - hostname: chart-example.local
              paths:
                - path: /
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: Ingress
      - isAPIVersion:
          of: networking.k8s.io/v1
      - equal:
          path: metadata.name
          value: "example-app-test"
      - equal:
          path: .spec.rules[0].host
          value: "chart-example.local"
      - equal:
          path: .spec.rules[0].http.paths[0].path
          value: "/"